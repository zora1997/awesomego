# Reference https://github.com/uber/prototool/blob/dev/etc/config/example/prototool.yaml

excludes:
  - grpc/third_party

protoc:
  version: 3.11.0
  includes:
    - grpc/third_party/googleapis

lint:
  # Linter rules.
  # Run prototool lint --list-all-linters to see all available linters.
  # Run prototool lint --list-linters to see the currently configured linters.
  group: google
  rules:
    add:
      - COMMENTS_NO_C_STYLE                                            # Verifies that there are no /* c-style */ comments.
      - COMMENTS_NO_INLINE                                             # Verifies that there are no inline comments.
      - ENUMS_NO_ALLOW_ALIAS                                           # Verifies that no enums use the option "allow_alias".
      - ENUM_FIELD_NAMES_UPPERCASE                                     # Verifies that all enum field names are UPPERCASE.
      - ENUM_FIELD_NAMES_UPPER_SNAKE_CASE                              # Verifies that all enum field names are UPPER_SNAKE_CASE.
      - ENUM_FIELD_PREFIXES                                            # Verifies that all enum fields are prefixed with [NESTED_MESSAGE_NAME_]ENUM_NAME_.
      - ENUM_FIELD_PREFIXES_EXCEPT_MESSAGE                             # Verifies that all enum fields are prefixed with ENUM_NAME_.
      - ENUM_NAMES_CAMEL_CASE                                          # Verifies that all enum names are CamelCase.
      - ENUM_NAMES_CAPITALIZED                                         # Verifies that all enum names are Capitalized.
      - ENUM_ZERO_VALUES_INVALID                                       # Verifies that all enum zero value names are [NESTED_MESSAGE_NAME_]ENUM_NAME_INVALID.
      - ENUM_ZERO_VALUES_INVALID_EXCEPT_MESSAGE                        # Verifies that all enum zero value names are ENUM_NAME_INVALID.
      - FIELDS_NOT_RESERVED                                            # Verifies that no message or enum has a reserved field.
      - FILE_HEADER                                                    # Verifies that the file header matches the expected file header if the file_header option is set in the configuration file.
      - FILE_NAMES_LOWER_SNAKE_CASE                                    # Verifies that the file name is lower_snake_case.proto.
      - FILE_OPTIONS_GO_PACKAGE_NOT_LONG_FORM                          # Verifies that the file option "go_package" is not of the form "go/import/path;package".
      - FILE_OPTIONS_GO_PACKAGE_SAME_IN_DIR                            # Verifies that the file option "go_package" of all files in a directory are the same.
      - FILE_OPTIONS_REQUIRE_GO_PACKAGE                                # Verifies that the file option "go_package" is set.
      - GOGO_NOT_IMPORTED                                              # Verifies that the "gogo.proto" file from gogo/protobuf is not imported.
      - IMPORTS_NOT_PUBLIC                                             # Verifies that there are no public imports.
      - IMPORTS_NOT_WEAK                                               # Verifies that there are no weak imports.
      - MESSAGES_NOT_EMPTY_EXCEPT_REQUEST_RESPONSE_TYPES               # Verifies that all messages except for request and response types are not empty.
      - MESSAGE_FIELDS_DURATION                                        # Verifies that all non-map fields that contain "duration" in their name are google.protobuf.Durations.
      - MESSAGE_FIELDS_NOT_FLOATS                                      # Verifies that all message fields are not floats.
      - MESSAGE_FIELDS_NO_JSON_NAME                                    # Verifies that no message field has the "json_name" option set.
      - MESSAGE_FIELD_NAMES_FILENAME                                   # Verifies that all message field names do not contain "file_name" as "filename" should be used instead.
      - MESSAGE_FIELD_NAMES_FILEPATH                                   # Verifies that all message field names do not contain "file_path" as "filepath" should be used instead.
      - MESSAGE_FIELD_NAMES_LOWERCASE                                  # Verifies that all message field names are lowercase.
      - MESSAGE_FIELD_NAMES_LOWER_SNAKE_CASE                           # Verifies that all message field names are lower_snake_case.
      - MESSAGE_FIELD_NAMES_NO_DESCRIPTOR                              # Verifies that all message field names are not "descriptor", which results in a collision in Java-generated code.
      - MESSAGE_NAMES_CAMEL_CASE                                       # Verifies that all non-extended message names are CamelCase.
      - MESSAGE_NAMES_CAPITALIZED                                      # Verifies that all non-extended message names are Capitalized.
      - NAMES_NO_COMMON                                                # Verifies that no type name contains the word "common".
      - NAMES_NO_DATA                                                  # Verifies that no type name contains the word "data".
      - NAMES_NO_UUID                                                  # Verifies that no type name contains the word "uuid".
      - ONEOF_NAMES_LOWER_SNAKE_CASE                                   # Verifies that all oneof names are lower_snake_case.
      - PACKAGES_SAME_IN_DIR                                           # Verifies that the packages of all files in a directory are the same.
      - PACKAGE_IS_DECLARED                                            # Verifies that there is a package declaration.
      - PACKAGE_LOWER_SNAKE_CASE                                       # Verifies that the package is lower_snake.case.
      - PACKAGE_NO_KEYWORDS                                            # Verifies that no packages contain one of the keywords "internal,public,private,protected,std" as part of the name when split on '.'.
      - REQUEST_RESPONSE_TYPES_AFTER_SERVICE                           # Verifies that request and response types are defined after any services and the response type is defined after the request type.
      - RPCS_NO_STREAMING                                              # Verifies that all rpcs are unary.
      - RPC_NAMES_CAMEL_CASE                                           # Verifies that all RPC names are CamelCase.
      - RPC_NAMES_CAPITALIZED                                          # Verifies that all RPC names are Capitalized.
      - SERVICE_NAMES_CAMEL_CASE                                       # Verifies that all service names are CamelCase.
      - SERVICE_NAMES_CAPITALIZED                                      # Verifies that all service names are Capitalized.
      - SERVICE_NAMES_MATCH_FILE_NAME                                  # Verifies that there is one service per file and the file name is service_name_lower_snake_case.proto.
      - SERVICE_NAMES_NO_PLURALS                                       # Verifies that all CamelCase service names do not contain plural components.
      - SYNTAX_PROTO3                                                  # Verifies that the syntax is proto3.
      - WKT_DIRECTLY_IMPORTED                                          # Verifies that the Well-Known Types are directly imported using "google/protobuf/" as the base of the import.
      - WKT_DURATION_SUFFIX                                            # Verifies that all google.protobuf.Duration field names are "duration" or end in "_duration".
      - WKT_TIMESTAMP_SUFFIX                                           # Verifies that all google.protobuf.Timestamp field names are "time" or end in "_time".

generate:
  go_options:
    import_path: git.zora.com/repos/awesomego/grpc/proto
  plugins:
    - name: go
      type: go
      flags: paths=source_relative
      output: ./grpc/gen/
    - name: go-grpc
      type: go
      flags: paths=source_relative,require_unimplemented_servers=false
      output: ./grpc/gen/